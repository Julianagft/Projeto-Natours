.story{
    width: 75%;
    margin: 0 auto;
    box-shadow: 0 3rem 6rem rgba($preto, .1);
    background-color: rgba($branco, .6);
    border-radius: 3px;
    padding: 6rem;
    padding-left: 9rem; //6 + 3rem do transform:translateX;
    font-size: $fonte-padrao;
    transform: skewX(-12deg);
    //A função skew() usada em transformações 2D do CSS para aplicar inclinações a elementos HTML. A transformação skew() permite que você incline ou distorça um elemento ao longo do eixo X e/ou Y.


    &__shape{
        width: 15rem;
        height: 15rem;
        float: left;
        -webkit-shape-outside: circle(50% at 50% 50%);
        shape-outside: circle(50% at 50% 50%);//só funciona se o elemnto tiver dimensões definidas (height e width), e estiver 'floated'.

        //A propriedade CSS shape-outside é usada para controlar o fluxo de texto ao redor de um elemento, como uma imagem ou um elemento flutuante, permitindo que o texto siga uma forma específica em vez de seguir o fluxo padrão de uma caixa retangular. Isso é particularmente útil para criar layouts de página mais interessantes e dinâmicos. A propriedade shape-outside funciona em conjunto com a propriedade float para moldar o fluxo de texto.
        
        -webkit-clip-path:circle(50% at 50% 50%);
        clip-path: circle(50% at 50% 50%);
        transform: translateX(-3rem) skewX(12deg);

        position: relative;
    }

    &__image{
        height: 100%;
        transform: translateX(-4rem) scale(1.4);
        transition: all .5s;
    }
    //Imagens flexiveis para responsive web designs elas sempre precisam de um 'width' ou 'height', sempre, sem excessão.

    &__text{
        transform: skewX(12deg);
    }

    &__caption{
        color:$branco;
        font-size: 1.7rem;
        text-align: center;

        position: absolute;
        top:50%;
        left:50%;
        transform: translate(-50%, 0);

        opacity: 0;
        transition: all .5s;
    }

    &:hover &__caption{
        opacity: 1;
        transform: translate(-50%, -50%);
    }

    &:hover &__image{
        transform: translateX(-4rem) scale(1);
        filter: blur(3px) brightness(80%);
    }
}